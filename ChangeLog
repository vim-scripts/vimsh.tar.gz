    ChangeLog
    =========

    This file contains a listing of modifications to vimsh.
    Dates are included.  All changes by <bsturk@nh.ultranet.com> unless
    noted.

    12/05/01 - 0.2a
                      * Fixed tabwidth
                      * Fixed not on prompt message
                      * Fixed handling of user input execution rm -i works
                      * Shells now die via autocommand

    12/06/01 - 0.3a 
                      * Fixed the first line issue
                      * Fixed the printed ^Ms

    12/07/01 - 0.4a
                      * Implemented clear, exit, and can now alternate between
                        using popen3( pipes ) or pty.  This allows platforms
                        that do not support pty to work.  Should work on Windows
                        flavors.

    12/07/01 - 0.5
                      * Implemented secure input of passwords,
                      * Exit cmd works as expected, for subprocesses it
                        exits to parent, initial shell exit will delete buffer,
                      * Keep <Delete> from overwriting prompt

    12/08/01 - 0.6
                      * Removed the <Delete><BS> hooks.  They just weren't
                        working as I thought they would.  Now just check
                        for cursor to not be in prompt.
                      * Figured out the ftp issue see "notes".
                      * Added a mapping & func to set timeouts. 
                      * Changed pty prompt to something useful,
                      * Fixed clear

    12/10/01 - 0.7    
                      * Made usage of tty, pty condtional on not being windows
                      * Removed popen buffer size
                      * Increased timeout if using popen3
                      * Fixed output for lines crossing consecutive reads for pty
                      * Added map for starting a new prompt at bottom of buffer

    12/11/01 - 0.8   
                      * Windows support, tested on NT4 w/ ActiveState Python 2.2
                        Should also work on 2K/XP. Caveat hacktor ;)
                        Non interactive programs only, dir, findstr, attrib etc
                        work fine, no ftp, telnet, etc yet. 
                      * Made clear check more explicit, cleartool triggered it
                      * Fixed the mysterious missing single char issue.

    12/13/01 - 0.9
                      * Set buftype=nofile <b.cerrina@wanadoo.fr>
                      * Option to use current buffer if non-modified
                      * Use vim variables for options so this file doesn't need
                        to be modified to allow customization.
                      * Handle cancelling of input dialogs
                      * Flag unsupported windows console commands
                        ( partial list see:unsupp_regex )

                      * NOTE-- All attempts I've made to get interactive programs to
                               work under Windows have failed.  Without pty/expect like
                               functionality under Windows, interactive programs cannot
                               work using this script.  More specifically, programs
                               that do buffered I/O or read/write directly to the
                               console.  I'll try any ideas submitted, but for now
                               I'm punting.

    12/20/01 - 0.10
                      * !! NOTE !! -- New way to run is to "source" vimsh.vim
                      * /bin/sh is symlinked to csh on *bsd, added csh prompt.
                      * Fixed mappings, needed to be set after buffer created.
                      * Added check for buffer's existence before writing prompt
                        and jump to prompt if it already exists.
                      * Ctrl-c ( SIGINT ) for interrupting continuous cmds, prompts
                        if multiple processes besides shell running.
                      * Cleaned up exit handling
                      * Added function and mapping for refreshing/paging
                        output when timeout is too short.
                      * Added vim function to redraw periodically during long
                        operations or continuous operations ( ie ping <host> or 
                        find /  Added redraw func to vimsh.vim
                      * Created ChangeLog, TODO, and vimsh.vim.  vimsh.vim is
                        now the way that vimsh is started.  The vimsh.vim is
                        a place for me to put code that is unsupported when
                        running python scripts within vim.  Only limitation so
                        far has been to not be able to define a vim function
                        from within a python script.  This file will also allow
                        users to add it to their plugin directory ( although
                        it is highly unrecommended )

    03/08/02 - 0.11
                      * Added support for sending EOF. Default
                        mapping is Ctrl-D <C-d>.  Now you can run python
                        (pty only) for example in a buffer and quit it by typing
                        Ctrl-D.
                      * Fixed snafu of line split in the middle of python
                        statement which kept script from loading.  WHOOPS.
                        NOTE TO SELF, don't edit and test vimsh in the same
                        vim session!
                      * Made the signalling mechanism more generic so I can
                        add more handlers in the future.

    04/04/02 - 0.12
                      * Fix for Solaris pty detection.
                      * EOF and SIGINT now query termios settings so
                        the 'right thing' happens.  Users can still map
                        whatever vim key sequence they want for these
                        operations.  Support for more of these coming
                        in future versions.
                      * Removed now unused vimsh.signal function.
                      * Output of slower commands after refresh give
                        better but still not perfect output.
                      * For pty, SIGINT now flushes remaining data which will
                        work for some commands, i.e. ping.  Some apps still
                        will not flush correctly, find(1) for example.
                      * Added a help message for SIGINT handler which can be
                        disabled by setting vimsh_show_workaround_msgs
                        to 0 in your .vimrc.  It just explains how to get
                        around not seeing the prompt for commands that don't
                        flush correctly after SIGINT.
                      * Go back to insert mode after paging output.
                      * Fixes and speed ups for Windows
                            - BufWipeout wasn't being hit so lots of cmd.exe
                              instances being left around, changed to
                              BufDelete.
                            - ^M wasn't being removed from end of lines that
                              had it, i.e. ping.exe.
                            - Buffer size for reading from pipe has been
                              optimized somewhat.
                            - Return to insert mode after trying to execute
                              unsupported command.
                            - Changed redraw frequency for better interactive
                              response.

    04/10/02 - 0.13
                      * Figured out the line break always creeping in to
                        files for some users.  Winzip has feature under
                            Options->Configuration->Miscellaneous
                        called "Tar file smart CF/LF conversion".  
                        It's not so smart... Turn it off if you want
                        to unpack the tarball using Winzip.  Better yet
                        use the vimsh.zip file available at my website.
                      * Fixed 'exit' of shell killing entire vim session rather
                        than just the vimsh buffer.
                      * Fixed empty line being added after paging output (F5)
                      * Now check for password prompt when paging slow output(F5).
                      * Cleanup of filename handling
                      * Removed some un-needed ';' characters at the end of
                        lines ( this is what happens when you do C all day )
                      * Removed duplicate sending of EOF in send_eof.
                      * Fixed pty/# of proc detection
